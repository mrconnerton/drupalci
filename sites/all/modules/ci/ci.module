<?php

function ci_menu() {
  $items['node/%node/build'] = array(
    'title' => 'Build', 
    'page callback' => 'ci_trigger_build', 
    'page arguments' => array(1), 
    'access callback' => 'node_access', 
    'access arguments' => array('view', 1), 
    'weight' => 0, 
    'type' => MENU_LOCAL_TASK, 
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  return $items;
}

function ci_trigger_build($node) {
  if($node->type == 'job') {
    $build = new stdClass();
    $build->type = 'build';
    node_object_prepare($build);
    $build->language = LANGUAGE_NONE;
    $build->field_job[LANGUAGE_NONE][0]['target_id'] = $node->nid;
    $build->field_status[ $node->language ][0]['value'] = 'pending';
    $build = node_submit($build);
    node_save($build);
    drupal_goto('node/' . $build->nid);
  }
}

function ci_cron() {
  $sql = "select s.entity_id as build_nid, j.field_job_target_id as job_id from field_data_field_status s left join field_data_field_job j on s.entity_id = j.entity_id where s.field_status_value = 'pending' order by s.entity_id asc limit 1";
  $result = db_query($sql);
  foreach($result as $build) {
    $job = node_load($build->job_id);
    $script = "";
    foreach($job->field_build_step['und'] as $step) {
      $id = $step['value'];
      $step = entity_load('field_collection_item', array($id));
      $script .= $step[$id]->field_command['und'][0]['value'] . "\n";
    }
    
    $time = time();
    $file = "/tmp/dci-build-{$build->build_nid}-{$time}.sh";
    $script .= "rm $file". "\n";
    file_put_contents($file, $script);
    chmod($file, 0755);
    
    $logfile = "/tmp/dci-build-{$build->build_nid}-{$time}.log";
    exec("$file > $logfile 2>&1");
    
    $build = node_load($build->build_nid);
    $build->field_log_file_location['und'][0]['value'] = $logfile;
    $build->field_status['und'][0]['value'] = 'complete';
    node_save($build);
  }
}

function ci_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'build' && !empty($node->field_log_file_location['und'])) {
    $log = $node->field_log_file_location['und'][0]['value'];
    $contents = file_get_contents($log);
    $node->content['log_file_output'] = array(
      '#markup' => "<pre>$contents</pre>", 
      '#weight' => 10,
    );
  }
}

